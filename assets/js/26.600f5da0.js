(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{386:function(v,_,i){"use strict";i.r(_);var l=i(1),e=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"常见数据结构术语中英对照表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见数据结构术语中英对照表"}},[v._v("#")]),v._v(" 常见数据结构术语中英对照表")]),v._v(" "),_("ul",[_("li",[v._v("数据：      Data")]),v._v(" "),_("li",[v._v("数据元素：     Data element")]),v._v(" "),_("li",[v._v("数据项：  Data item")]),v._v(" "),_("li",[v._v("数据结构：     Data structure")]),v._v(" "),_("li",[v._v("逻辑结构：     Logical structure")]),v._v(" "),_("li",[v._v("数据类型：     Data type")]),v._v(" "),_("li",[v._v("指针：      Pointer")]),v._v(" "),_("li",[v._v("顺序存储结构：    Sequential storage structure")]),v._v(" "),_("li",[v._v("链状存储结构：    Linked storage structure")]),v._v(" "),_("li",[v._v("稠密索引：     Dense index")]),v._v(" "),_("li",[v._v("稀疏索引：     Sparse index")]),v._v(" "),_("li",[v._v("抽象数据类型：    Abstract DataType")]),v._v(" "),_("li",[v._v("算法：      Algorithm")]),v._v(" "),_("li",[v._v("正确性：  Correctness")]),v._v(" "),_("li",[v._v("可读性：  Readability")]),v._v(" "),_("li",[v._v("健壮性：  Robustness")]),v._v(" "),_("li",[v._v("频度：      Frequency count")]),v._v(" "),_("li",[v._v("时间复杂度： Time complexity")]),v._v(" "),_("li",[v._v("空间复杂度： Space complexity")]),v._v(" "),_("li",[v._v("直接前驱：     Immediate predecessor")]),v._v(" "),_("li",[v._v("线性表：  Linear list")]),v._v(" "),_("li",[v._v("顺序表：  Sequenatial list")]),v._v(" "),_("li",[v._v("单链表：  Singly linked list")]),v._v(" "),_("li",[v._v("循环链表：     Circylar linked lists")]),v._v(" "),_("li",[v._v("双向链表：     Double linked lists")]),v._v(" "),_("li",[v._v("双向循环链表：    Double circular linked list")]),v._v(" "),_("li",[v._v("栈：   Stack")]),v._v(" "),_("li",[v._v("栈顶：      Top")]),v._v(" "),_("li",[v._v("栈底：      Botton")]),v._v(" "),_("li",[v._v("后进先出：     Last In First Out")]),v._v(" "),_("li",[v._v("上溢：      Overflow")]),v._v(" "),_("li",[v._v("下溢：      Underflow")]),v._v(" "),_("li",[v._v("共享：      Shared")]),v._v(" "),_("li",[v._v("队列：      Queue")]),v._v(" "),_("li",[v._v("队尾：      Rear")]),v._v(" "),_("li",[v._v("队头：      Front")]),v._v(" "),_("li",[v._v("先进后出：     First In Last Out")]),v._v(" "),_("li",[v._v("串：   String")]),v._v(" "),_("li",[v._v("子串：      Substring")]),v._v(" "),_("li",[v._v("模式匹配：     Pattern matching")]),v._v(" "),_("li",[v._v("数组：      Arrays")]),v._v(" "),_("li",[v._v("行为主序：     Row major order")]),v._v(" "),_("li",[v._v("列为主序：     Column major order")]),v._v(" "),_("li",[v._v("稀疏矩阵：     Sparse matrices")]),v._v(" "),_("li",[v._v("特殊矩阵：     Special matrices")]),v._v(" "),_("li",[v._v("三元组表：     List of 3_tuples")]),v._v(" "),_("li",[v._v("十字链表：     Orthogonal list")]),v._v(" "),_("li",[v._v("广义表：  Generalized lists")]),v._v(" "),_("li",[v._v("树：   Tree")]),v._v(" "),_("li",[v._v("二叉树：  Binary tree")]),v._v(" "),_("li",[v._v("满二叉树：     Full binary tree")]),v._v(" "),_("li",[v._v("完全二叉树： Complete binary tree")]),v._v(" "),_("li",[v._v("二叉排序树： Binary sort tree")]),v._v(" "),_("li",[v._v("二叉搜索树： Binary search tree")]),v._v(" "),_("li",[v._v("前序遍历：     Preorder traversal")]),v._v(" "),_("li",[v._v("中序遍历：     Inorder traversal")]),v._v(" "),_("li",[v._v("后序遍历：     Postorder traversal")]),v._v(" "),_("li",[v._v("哈夫曼树：     Huffman tree")]),v._v(" "),_("li",[v._v("回溯：      Backtrackins")]),v._v(" "),_("li",[v._v("图：   Graph")]),v._v(" "),_("li",[v._v("有向图：  Directed graph (digraph)")]),v._v(" "),_("li",[v._v("无向图：  Undirected graph (undigraph)")]),v._v(" "),_("li",[v._v("有向完全图： Undirected Complete Graph")]),v._v(" "),_("li",[v._v("无向完全图： directed complete graph")]),v._v(" "),_("li",[v._v("稀疏图：  Sparse graph")]),v._v(" "),_("li",[v._v("稠密图：  Dense graph")]),v._v(" "),_("li",[v._v("网点：      Network")]),v._v(" "),_("li",[v._v("邻结点：  Adjacent")]),v._v(" "),_("li",[v._v("度：   Degree")]),v._v(" "),_("li",[v._v("出度：      Outdegree")]),v._v(" "),_("li",[v._v("入度：      Indegree")]),v._v(" "),_("li",[v._v("连通图：  Connected graph")]),v._v(" "),_("li",[v._v("连通分支：     Connected component")]),v._v(" "),_("li",[v._v("强连通图：     Strong graph")]),v._v(" "),_("li",[v._v("生成树：  Spanning tree")]),v._v(" "),_("li",[v._v("邻接矩阵：     Adjacency lists")]),v._v(" "),_("li",[v._v("邻接表：  Adjacency lists")]),v._v(" "),_("li",[v._v("邻接多重表： Adjacency multilists")]),v._v(" "),_("li",[v._v("深度优先索引：    Depth-First Search")]),v._v(" "),_("li",[v._v("广度优先索引：    Breath-First Search")]),v._v(" "),_("li",[v._v("最小生成树： Minimum spanning tree")]),v._v(" "),_("li",[v._v("最短路径：     Shortest path")]),v._v(" "),_("li",[v._v("有向无环图： Directed acycline graph")]),v._v(" "),_("li",[v._v("拓扑排序：     Topological sort")]),v._v(" "),_("li",[v._v("检索：      Searching")]),v._v(" "),_("li",[v._v("关键字：  Key")]),v._v(" "),_("li",[v._v("主关键字：     Primary key")]),v._v(" "),_("li",[v._v("顺序检索：     Sequential search")]),v._v(" "),_("li",[v._v("折半检索：     Binary search")]),v._v(" "),_("li",[v._v("分块检索：     Blocking search")]),v._v(" "),_("li",[v._v("平衡二叉树： Best wishes alanced binary tree")]),v._v(" "),_("li",[v._v("平衡因子：     Balanced factor")]),v._v(" "),_("li",[v._v("直接定址：     Immediately allocate")]),v._v(" "),_("li",[v._v("除留余数法： Division method")]),v._v(" "),_("li",[v._v("数字分析法： Digit analysis method")]),v._v(" "),_("li",[v._v("折叠法：  Folding method")]),v._v(" "),_("li",[v._v("线性探查：     Linear probing")]),v._v(" "),_("li",[v._v("平方取中法： Mid-square method")]),v._v(" "),_("li",[v._v("开放定址法： Open addressing")]),v._v(" "),_("li",[v._v("链地址法：     Chaining")]),v._v(" "),_("li",[v._v("排序：   Sorting")]),v._v(" "),_("li",[v._v("直接插入排序：    Straight insertion sort")]),v._v(" "),_("li",[v._v("希尔排序：     Shells method")]),v._v(" "),_("li",[v._v("缩小增量排序：    Diminishing increment sort")]),v._v(" "),_("li",[v._v("折半插入排序：    Binary insertion sort")]),v._v(" "),_("li",[v._v("二路插入排序：    2_way insertion sort")]),v._v(" "),_("li",[v._v("共享插入排序：    Shared insertion sort")]),v._v(" "),_("li",[v._v("冒泡排序：     Bubble sort")]),v._v(" "),_("li",[v._v("快速排序：     Quick sort")]),v._v(" "),_("li",[v._v("选择排序：     Selection sort")]),v._v(" "),_("li",[v._v("直接选择排序：    Straight selection sort")]),v._v(" "),_("li",[v._v("树形选择排序：    Tree selection sort")]),v._v(" "),_("li",[v._v("锦标赛排序： Tournament sort")]),v._v(" "),_("li",[v._v("堆排序：  Heap sort")]),v._v(" "),_("li",[v._v("归并排序：     Merging sort")]),v._v(" "),_("li",[v._v("二路归并：     2_way merge")]),v._v(" "),_("li",[v._v("多路归并：     Multi_way merge")]),v._v(" "),_("li",[v._v("基数排序：     Radix sorting")]),v._v(" "),_("li",[v._v("最低位优先： (LSD) Least Significant Digit First")]),v._v(" "),_("li",[v._v("最高位优先： (MSD) Most Significant Digit First")]),v._v(" "),_("li",[v._v("文件：     Files")]),v._v(" "),_("li",[v._v("顺序文件：     Sequential file")]),v._v(" "),_("li",[v._v("索引文件：     Indexed file")]),v._v(" "),_("li",[v._v("索引顺序存取方法：   Indexed Sequential Access Method")]),v._v(" "),_("li",[v._v("虚拟存储存取方法：   Virtual Storage Access Method")]),v._v(" "),_("li",[v._v("散列文件：     Hashed file")]),v._v(" "),_("li",[v._v("多关键字文件：    With more than one key")]),v._v(" "),_("li",[v._v("多重表文件： Multilist file")]),v._v(" "),_("li",[v._v("倒排文件：     Inverted file")]),v._v(" "),_("li",[v._v("数据抽象：     data abstraction")]),v._v(" "),_("li",[v._v("数据元素：     data element")]),v._v(" "),_("li",[v._v("数据对象：     data object")]),v._v(" "),_("li",[v._v("数据项：  data item")]),v._v(" "),_("li",[v._v("数据类型：     data type")]),v._v(" "),_("li",[v._v("抽象数据类型：    abstract data type")]),v._v(" "),_("li",[v._v("基本数据类型：    atomic data type")]),v._v(" "),_("li",[v._v("固定聚合数据类型：   fixed-aggregate data type")]),v._v(" "),_("li",[v._v("可变聚合数据类型：   variable-aggregate data type")]),v._v(" "),_("li",[v._v("线性表：  linear list")]),v._v(" "),_("li",[v._v("栈：   stack")]),v._v(" "),_("li",[v._v("队列：      queue")]),v._v(" "),_("li",[v._v("串：   string")]),v._v(" "),_("li",[v._v("数组：      array")]),v._v(" "),_("li",[v._v("树：   tree")]),v._v(" "),_("li",[v._v("图：   grabh")]),v._v(" "),_("li",[v._v("前趋：      predecessor")]),v._v(" "),_("li",[v._v("后继：      successor")]),v._v(" "),_("li",[v._v("直接前趋：     immediate predecessor")]),v._v(" "),_("li",[v._v("直接后继：     immediate successor")]),v._v(" "),_("li",[v._v("双端列表：     deque (double-ended queue)")]),v._v(" "),_("li",[v._v("循环队列：     cirular queue")]),v._v(" "),_("li",[v._v("指针：      pointer")]),v._v(" "),_("li",[v._v("先进先出表（队列）：      first-in first-out list")]),v._v(" "),_("li",[v._v("后进先出表（队列）：      last-in first-out list")]),v._v(" "),_("li",[v._v("栈底：      bottom")]),v._v(" "),_("li",[v._v("栈顶：      top")]),v._v(" "),_("li",[v._v("压入：      push")]),v._v(" "),_("li",[v._v("弹出：      pop")]),v._v(" "),_("li",[v._v("队头：      front")]),v._v(" "),_("li",[v._v("队尾：      rear")]),v._v(" "),_("li",[v._v("上溢：      overflow")]),v._v(" "),_("li",[v._v("下溢：      underflow")]),v._v(" "),_("li",[v._v("数组：      array")]),v._v(" "),_("li",[v._v("矩阵：      matrix")]),v._v(" "),_("li",[v._v("多维数组：     multi-dimentional array")]),v._v(" "),_("li",[v._v("以行为主的顺序分配：      row major order")]),v._v(" "),_("li",[v._v("以列为主的顺序分配：      column major order")]),v._v(" "),_("li",[v._v("三角矩阵：     truangular matrix")]),v._v(" "),_("li",[v._v("对称矩阵：     symmetric matrix")]),v._v(" "),_("li",[v._v("稀疏矩阵：     sparse matrix")]),v._v(" "),_("li",[v._v("转置矩阵：     transposed matrix")]),v._v(" "),_("li",[v._v("链表：      linked list")]),v._v(" "),_("li",[v._v("线性链表：     linear linked list")]),v._v(" "),_("li",[v._v("单链表：  single linked list")]),v._v(" "),_("li",[v._v("多重链表：     multilinked list")]),v._v(" "),_("li",[v._v("循环链表：     circular linked list")]),v._v(" "),_("li",[v._v("双向链表：     doubly linked list")]),v._v(" "),_("li",[v._v("十字链表：     orthogonal list")]),v._v(" "),_("li",[v._v("广义表：  generalized list")]),v._v(" "),_("li",[v._v("链：   link")]),v._v(" "),_("li",[v._v("指针域：  pointer field")]),v._v(" "),_("li",[v._v("链域：      link field")]),v._v(" "),_("li",[v._v("头结点：  head node")]),v._v(" "),_("li",[v._v("头指针：  head pointer")]),v._v(" "),_("li",[v._v("尾指针：  tail pointer")]),v._v(" "),_("li",[v._v("串：   string")]),v._v(" "),_("li",[v._v("空白（空格）串：       blank string")]),v._v(" "),_("li",[v._v("空串（零串）：    null string")]),v._v(" "),_("li",[v._v("子串：      substring")]),v._v(" "),_("li",[v._v("树：   tree")]),v._v(" "),_("li",[v._v("子树：      subtree")]),v._v(" "),_("li",[v._v("森林：      forest")]),v._v(" "),_("li",[v._v("根：   root")]),v._v(" "),_("li",[v._v("叶子：      leaf")]),v._v(" "),_("li",[v._v("结点：      node")]),v._v(" "),_("li",[v._v("深度：      depth")]),v._v(" "),_("li",[v._v("层次：      level")]),v._v(" "),_("li",[v._v("二叉树：  binary tree")]),v._v(" "),_("li",[v._v("平衡二叉树： banlanced binary tree")]),v._v(" "),_("li",[v._v("满二叉树：     full binary tree")]),v._v(" "),_("li",[v._v("完全二叉树： complete binary tree")]),v._v(" "),_("li",[v._v("遍历二叉树： traversing binary tree")]),v._v(" "),_("li",[v._v("二叉排序树： binary sort tree")]),v._v(" "),_("li",[v._v("二叉查找树： binary search tree")]),v._v(" "),_("li",[v._v("线索二叉树： threaded binary tree")]),v._v(" "),_("li",[v._v("哈夫曼树：     Huffman tree")]),v._v(" "),_("li",[v._v("有序数：  ordered tree")]),v._v(" "),_("li",[v._v("无序数：  unordered tree")]),v._v(" "),_("li",[v._v("判定树：  decision tree")]),v._v(" "),_("li",[v._v("双链树：  doubly linked tree")]),v._v(" "),_("li",[v._v("数字查找树： digital search tree")]),v._v(" "),_("li",[v._v("树的遍历：     traversal of tree")]),v._v(" "),_("li",[v._v("先序遍历：     preorder traversal")]),v._v(" "),_("li",[v._v("中序遍历：     inorder traversal")])]),v._v(" "),_("p",[v._v("后序遍历     postorder traversal")])])}),[],!1,null,null,null);_.default=e.exports}}]);